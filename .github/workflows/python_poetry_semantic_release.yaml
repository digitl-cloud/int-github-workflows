on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true
    inputs:
      workdir:
        description: "Working directory."
        type: string
        required: false
        default: "."
      repository:
        description: "Poetry repository to publish to. The target repository should be configured poetry.toml."
        required: false
        type: string
      project_id:
        description: "GC project ID."
        required: false
        type: string
      project_number:
        description: "GC project number, not the project ID."
        required: false
        type: string
      release_suffix:
        description: "Suffix (a.k.a build metadata) appended by semantic-release to the version number."
        required: false
        type: string
        default: ""
      transient_semantic_release_version:
        description: "If true, `semantic-release version` will be run, without committing or triggering a release."
        required: false
        type: boolean
        default: false
      publish:
        description: "If true, the package will be published to the target repository."
        required: false
        type: boolean
        default: false

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ inputs.workdir }}

    permissions:
      contents: "write"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup Poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Poetry install
        run: poetry install

      - name: Poetry key-ring
        run: poetry self add keyrings.google-artifactregistry-auth

      - name: Semantic Release Setup
        run: |
          git config --global user.name "Semantic Release"
          git config --global user.email "github@digitlcloud.com"

      - name: Python Semantic Release
        if: inputs.transient_semantic_release_version == false
        run: |
          poetry run semantic-release -v version \
            --build-metadata ${{ inputs.release_suffix }} \
            --no-changelog \
            --skip-build

      - name: Python Semantic Release (transient)
        if: inputs.transient_semantic_release_version == true
        run: |
          suffix=$(git branch --show-current | sed 's/feat\///')_$(git rev-parse --short HEAD)
          poetry run semantic-release -v version \
            --build-metadata ${{ inputs.release_suffix }} \
            --no-vcs-release \
            --no-commit \
            --no-tag \
            --no-changelog \
            --skip-build

      - name: Authenticate to Google Cloud
        if: inputs.publish == true
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/${{ inputs.project_number }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "github-actions@${{ inputs.project_id }}.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        if: inputs.publish == true
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Poetry publish
        if: inputs.publish == true
        run: poetry publish --build -r ${{ inputs.repository }} --skip-existing
