on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      tag:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      project_id:
        required: true
        type: string
      project_number:
        required: true
        type: string
      build_args:
        required: false
        type: string

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup buildx
        uses: docker/setup-buildx-action@v2

      - id: Auth
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          workload_identity_provider: "projects/${{ inputs.project_number }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "github-actions@${{ inputs.project_id }}.iam.gserviceaccount.com"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v0"

      - name: Configure Docker
        run: |
          gcloud auth configure-docker europe-docker.pkg.dev

      - name: Safe tag name
        id: safe_tag
        run: |
          echo "safe_tag=${{ inputs.tag }}" | sed 's/+/_/g' >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ inputs.dockerfile }}
          build-args: ${{ inputs.build_args }}
          platforms: linux/amd64
          push: true
          tags: >-
            europe-docker.pkg.dev/${{ inputs.project_id }}/docker/${{ inputs.name }}:${{ steps.safe_tag.outputs.safe_tag }},
            europe-docker.pkg.dev/${{ inputs.project_id }}/docker/${{ inputs.name }}:latest

      - name: Clean Cloud Artifact Registery
        uses: "docker://us-docker.pkg.dev/gcr-cleaner/gcr-cleaner/gcr-cleaner-cli"
        with:
          args: >-
            -repo=europe-docker.pkg.dev/${{ inputs.project_id }}/docker/${{ inputs.name }}
            -tag-filter-any=.*
            -keep=10
